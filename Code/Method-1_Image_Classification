{"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7jpKiQSq2-Yo","executionInfo":{"status":"ok","timestamp":1703478523810,"user_tz":-330,"elapsed":3993,"user":{"displayName":"Agneeshwaran N M","userId":"06849285604708332594"}},"outputId":"fdfeb17a-3efb-457e-e91b-9733fec8d038"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import tensorflow as tf\n","import tensorflow.keras as keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator"],"metadata":{"id":"P-S4nyh4OxGg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras import layers\n","\n","# Define the model architecture\n","model = tf.keras.Sequential([\n","    layers.Conv2D(64, (3, 3), activation='relu', input_shape=(512, 512, 3)),  # Adjust image dimensions\n","    layers.MaxPooling2D((2, 2)),\n","    layers.Conv2D(64, (3, 3), activation='relu'),\n","    layers.MaxPooling2D((2, 2)),\n","    layers.Conv2D(128, (3, 3), activation='relu'),\n","    layers.MaxPooling2D((2, 2)),\n","    layers.Flatten(),\n","    layers.Dense(128, activation='relu'),\n","    layers.Dense(128, activation='relu'),\n","    layers.Dense(4, activation='softmax')  # Adjust num_classes based on your problem\n","])\n","\n","# Load and split the dataset into train, test, and validation sets\n","train_datagen = ImageDataGenerator()\n","\n","train_generator = train_datagen.flow_from_directory(\n","    '/content/gdrive/MyDrive/Final Year Project - Lung Cancer Prediction/Datasets/CT Images 1000/CT Images 1000 - Dataset/train',\n","    batch_size=32,\n","    class_mode='categorical',\n","    subset='training'\n",")\n","\n","valid_datagen = ImageDataGenerator()\n","\n","validation_generator = valid_datagen.flow_from_directory(\n","    '/content/gdrive/MyDrive/Final Year Project - Lung Cancer Prediction/Datasets/CT Images 1000/CT Images 1000 - Dataset/valid',\n","    batch_size=32,\n","    class_mode='categorical',\n","    subset='validation'\n",")\n","\n","# Evaluate the model\n","test_datagen = ImageDataGenerator()\n","\n","test_generator = test_datagen.flow_from_directory(\n","    '/content/gdrive/MyDrive/Final Year Project - Lung Cancer Prediction/Datasets/CT Images 1000/CT Images 1000 - Dataset/test',\n","    batch_size=32,\n","    class_mode='categorical',\n","    shuffle=False\n",")\n","\n","# Compile the model\n","model.compile(optimizer='adam',\n","              loss='categorical_crossentropy',  # Adjust loss if needed\n","              metrics=['accuracy'])\n","\n","# Train the model\n","model.fit(train_generator, epochs=1,  # Adjust epochs as needed\n","          validation_data=(validation_generator))\n","\n","# Evaluate on the test set\n","test_loss, test_acc = model.evaluate(test_generator)\n","print('Test accuracy:', test_acc)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"JokOSeqdO4N7","executionInfo":{"status":"error","timestamp":1708936573888,"user_tz":-330,"elapsed":5078,"user":{"displayName":"Rahul Chandian","userId":"15912229345809896039"}},"outputId":"462286d4-5e04-4dac-e7c0-b911b3448c6f"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'ImageDataGenerator' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-1f517a04ed51>\u001b[0m in \u001b[0;36m<cell line: 19>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;31m# Load and split the dataset into train, test, and validation sets\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 19\u001b[0;31m \u001b[0mtrain_datagen\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mImageDataGenerator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     20\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m train_generator = train_datagen.flow_from_directory(\n","\u001b[0;31mNameError\u001b[0m: name 'ImageDataGenerator' is not defined"]}]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}