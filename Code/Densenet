{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"iTwSvFxew61x","executionInfo":{"status":"error","timestamp":1708936432531,"user_tz":-330,"elapsed":5053,"user":{"displayName":"Rahul Chandian","userId":"15912229345809896039"}},"outputId":"ace87dab-e8ee-43ef-898d-f357f22e8bdc"},"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/content/drive/MyDrive/Final Year Project - Lung Cancer Prediction/Datasets/CT_Original/train'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-8ef5b5eb964c>\u001b[0m in \u001b[0;36m<cell line: 15>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0mmain_data_dir\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"/content/drive/MyDrive/Final Year Project - Lung Cancer Prediction/Datasets/CT_Original/train\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m \u001b[0mnum_classes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlistdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmain_data_dir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Add this line\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;31m# Load the CT scan image\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/Final Year Project - Lung Cancer Prediction/Datasets/CT_Original/train'"]}],"source":["from tensorflow.keras.preprocessing.image import load_img, img_to_array\n","from tensorflow.keras.applications.mobilenet_v2 import preprocess_input\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.applications import VGG16\n","from tensorflow.keras.layers import GlobalAveragePooling2D, Dense, Dropout\n","import matplotlib.pyplot as plt\n","import matplotlib.image as mpimg\n","import numpy as np\n","import tensorflow as tf\n","from tensorflow.keras.preprocessing.image import load_img, img_to_array\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","import os  # Add this import\n","\n","main_data_dir = \"/content/drive/MyDrive/Final Year Project - Lung Cancer Prediction/Datasets/CT_Original/train\"\n","num_classes = len(os.listdir(main_data_dir))  # Add this line\n","\n","# Load the CT scan image\n","image_path = \"/content/drive/MyDrive/Final Year Project - Lung Cancer Prediction/Datasets/CT_Original/train/Cancerous/Cancerous186.jpg\"\n","img = mpimg.imread(image_path)\n","\n","# Display the original image\n","plt.imshow(img)\n","plt.axis('off')\n","plt.title('Original Image')\n","plt.show()\n","\n","# Preprocess the image\n","image = load_img(image_path, target_size=(224, 224))\n","image_array = img_to_array(image)\n","image_array = np.expand_dims(image_array, axis=0)\n","preprocessed_image = preprocess_input(image_array)\n","\n","# Visualize the preprocessed image\n","plt.imshow(preprocessed_image[0])\n","plt.axis('off')\n","plt.title('DenseNet Model')\n","plt.show()\n","\n","base_model_densenet = DenseNet121(weights='imagenet', include_top=False, input_shape=(224, 224, 3))\n","x_densenet = base_model_densenet.output\n","x_densenet = GlobalAveragePooling2D()(x_densenet)\n","x_densenet = Dense(512, activation='relu')(x_densenet)\n","x_densenet = Dropout(0.5)(x_densenet)\n","predictions_densenet = Dense(num_classes, activation='softmax')(x_densenet)\n","\n","model_densenet = Model(inputs=base_model_densenet.input, outputs=predictions_densenet)\n","for layer in base_model_densenet.layers:\n","    layer.trainable = False\n","model_densenet.compile(optimizer=Adam(lr=0.001),\n","                       loss='categorical_crossentropy',\n","                       metrics=['accuracy'])\n","r = 0.75\n","batch_size = 18\n","epochs = 20\n","train_datagen = ImageDataGenerator(\n","    rescale=1.0 / 255,\n","    rotation_range=20,\n","    width_shift_range=0.2,\n","    height_shift_range=0.2,\n","    shear_range=0.2,\n","    zoom_range=0.2,\n","    horizontal_flip=True,\n","    fill_mode='nearest',\n","    validation_split=1 - r\n",")\n","\n","tg = train_datagen.flow_from_directory(\n","    main_data_dir,\n","    target_size=(224, 224),\n","    batch_size=batch_size,\n","    class_mode='categorical',\n","    subset='training'\n",")\n","\n","gv = train_datagen.flow_from_directory(\n","    main_data_dir,\n","    target_size=(224, 224),\n","    batch_size=batch_size,\n","    class_mode='categorical',\n","    subset='validation'\n",")\n","\n","# Fit the model\n","history = model_densenet.fit(\n","    tg,\n","    steps_per_epoch=tg.samples // batch_size,\n","    epochs=epochs,\n","    validation_data=gv,\n","    validation_steps=gv.samples // batch_size\n",")\n","\n","\n","# Display the training history\n","plt.plot(history.history['accuracy'])\n","plt.plot(history.history['val_accuracy'])\n","plt.title('Model accuracy')\n","plt.xlabel('Epoch')\n","plt.ylabel('Accuracy')\n","plt.legend(['Train', 'Validation'], loc='upper left')\n","plt.show()\n","\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.title('Model loss')\n","plt.xlabel('Epoch')\n","plt.ylabel('Loss')\n","plt.legend(['Train', 'Validation'], loc='upper left')\n","plt.show()\n"]},{"cell_type":"code","source":[],"metadata":{"id":"Nz1p23-cyOuu"},"execution_count":null,"outputs":[]}]}